{"version":3,"file":"static/js/289.c319be2f.chunk.js","mappings":"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","sources":["moviesAPI.js","pages/MoveDetails.styled.js","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '7cc21d4cba3da7a5d2a2ac6813f90105';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n","import styled from '@emotion/styled';\nimport { NavLink } from 'react-router-dom';\n\nexport const CardWrapper = styled.div`\n  display: flex;\n  align-items: flex-start;\n  color: ${props => props.theme.colors.white};\n`;\n\nexport const GoBackLink = styled(NavLink)`\n  color: ${props => props.theme.colors.white};\n  border: 1px solid;\n  border-radius: 8px;\n  padding: 5px;\n  &:hover {\n    color: ${props => props.theme.colors.dark};\n  }\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  margin-top: 10px;\n`;\n\nexport const InfoWrapper = styled.div`\n  margin: 10px 8px;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const ListLink = styled.ul`\n  display: flex;\n  gap: 20px;\n  margin-bottom: 10px;\n`;\n\nexport const ItemLink = styled.li`\n  cursor: pointer;\n  color: ${props => props.theme.colors.white};\n  border: 1px solid;\n  border-radius: 8px;\n  padding: 5px;\n  &:hover {\n    color: ${props => props.theme.colors.dark};\n  }\n`;\n\nexport const Link = styled(NavLink)`\n  &.active {\n    color: ${props => props.theme.colors.accent};\n  }\n`;\n","import { generatePath, Outlet, useLocation, useParams } from 'react-router-dom';\nimport { Suspense, useEffect, useState } from 'react';\nimport { getMovieById } from 'moviesAPI';\nimport notFoundPoster from 'images/poster.jpg';\nimport {\n  CardWrapper,\n  GoBackLink,\n  Image,\n  InfoWrapper,\n  ItemLink,\n  ListLink,\n  Link,\n} from './MoveDetails.styled';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst MovieDetails = () => {\n  const { movieId } = useParams();\n  const [movie, setMovie] = useState({});\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieById(movieId)\n      .then(\n        ({\n          id,\n          poster_path,\n          original_title,\n          overview,\n          release_date,\n          vote_average,\n          genres,\n        }) => {\n          setMovie({\n            id,\n            poster_path,\n            original_title,\n            overview,\n            release_date,\n            vote_average,\n            genres,\n          });\n        }\n      )\n      .catch(() =>\n        toast.error(`Whoops, something went wrong! Please try again later!`)\n      );\n  }, [movieId]);\n\n  const goBackLink = location?.state?.from ?? '/';\n\n  const {\n    id,\n    poster_path,\n    original_title,\n    overview,\n    release_date,\n    vote_average,\n    genres,\n  } = movie;\n\n  return (\n    <main>\n      <GoBackLink to={goBackLink}>Go back</GoBackLink>\n      <CardWrapper>\n        <Image\n          src={\n            poster_path\n              ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n              : `${notFoundPoster}`\n          }\n          alt={original_title}\n        />\n        <InfoWrapper>\n          <h2>\n            {original_title} ({new Date(release_date).getFullYear()})\n          </h2>\n          <p>User scores: {Math.ceil(vote_average * 10)}%</p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h3>Genres</h3>\n          <p>{genres?.map(genre => genre.name).join(', ')}</p>\n          <ListLink>\n            <ItemLink>\n              <Link\n                state={{ from: location?.state?.from }}\n                to={generatePath('cast', { id })}\n              >\n                Cast\n              </Link>\n            </ItemLink>\n            <ItemLink>\n              <Link\n                state={{ from: location?.state?.from }}\n                to={generatePath('reviews', { id })}\n              >\n                Reviews\n              </Link>\n            </ItemLink>\n          </ListLink>\n          <Suspense>\n            <Outlet />\n          </Suspense>\n        </InfoWrapper>\n      </CardWrapper>\n      <ToastContainer />\n    </main>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","CardWrapper","styled","props","theme","colors","white","GoBackLink","NavLink","dark","Image","InfoWrapper","ListLink","ItemLink","Link","accent","movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","poster_path","original_title","overview","release_date","vote_average","genres","catch","toast","goBackLink","state","from","to","src","notFoundPoster","alt","Date","getFullYear","Math","ceil","map","genre","name","join","generatePath","Suspense"],"sourceRoot":""}