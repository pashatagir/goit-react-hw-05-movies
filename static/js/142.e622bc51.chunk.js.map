{"version":3,"file":"static/js/142.e622bc51.chunk.js","mappings":"+QAEaA,EAAYC,EAAAA,EAAAA,IAAH,uIAOTC,EAAcD,EAAAA,EAAAA,IAAH,gJACF,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,IAQdC,EAAQN,EAAAA,EAAAA,IAAH,yFAKLO,EAAYP,EAAAA,EAAAA,GAAH,wHAIX,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,OAAOC,KAAvB,G,mJCzBhBG,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAHc,oCAMT,IAAMC,EAAc,mCAAG,sGACLF,EAAAA,EAAAA,IAAU,sBADL,uBACpBG,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,qDAKdC,EAAY,mCAAG,WAAMC,GAAN,yFACHL,EAAAA,EAAAA,IAAA,iBAAoBK,IADjB,uBAClBF,EADkB,EAClBA,KADkB,kBAEnBA,GAFmB,2CAAH,sDAKZG,EAAc,mCAAG,WAAMC,GAAN,yFACLP,EAAAA,EAAAA,IAAA,gBAA2B,CAChDQ,OAAQ,CACND,MAAAA,KAHwB,uBACpBJ,EADoB,EACpBA,KADoB,kBAMrBA,GANqB,2CAAH,qD,6ICbdM,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAAC,KAAD,UACGF,EAAOG,KAAI,gBAAGR,EAAH,EAAGA,GAAIS,EAAP,EAAOA,eAAgBC,EAAvB,EAAuBA,YAAvB,OACV,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,MAAO,CAAEC,KAAMN,GAAYO,GAAE,iBAAYb,GAA/C,WACE,SAAC,KAAD,CACEc,IACEJ,EAAW,0CAC4BA,GAD5B,UAEJK,GAETC,IAAKP,KAEP,SAAC,KAAD,UAAYA,QAVET,EADR,KAiBjB,E,oBCND,EAfa,WACX,OAA4BiB,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KAMA,OALAC,EAAAA,EAAAA,YAAU,YACRtB,EAAAA,EAAAA,MAAiBuB,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACvBH,GAAU,OAAIG,GACf,GACF,GAAE,KAED,6BACE,4CACA,SAACjB,EAAD,CAAYC,OAAQA,MAGzB,C","sources":["components/MoviesList.styled.js","moviesAPI.js","components/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, 200px);\n  gap: 16px;\n  justify-content: center;\n`;\n\nexport const CardWrapper = styled.div`\n  border: 1px solid ${props => props.theme.colors.white};\n  border-radius: 8px;\n  transform: scale(1);\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport const Image = styled.img`\n  border-top-left-radius: 8px;\n  border-top-right-radius: 8px;\n`;\n\nexport const MovieName = styled.h3`\n  padding: 4px;\n  margin-top: 8px;\n  margin-bottom: 0;\n  color: ${props => props.theme.colors.white};\n  text-align: center;\n`;\n","import axios from 'axios';\nconst API_KEY = '7cc21d4cba3da7a5d2a2ac6813f90105';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = {\n  api_key: API_KEY,\n};\n\nexport const getTrendMovies = async () => {\n  const { data } = await axios.get('trending/movie/day');\n  return data;\n};\n\nexport const getMovieById = async id => {\n  const { data } = await axios.get(`/movie/${id}`);\n  return data;\n};\n\nexport const getMovieByName = async query => {\n  const { data } = await axios.get(`/search/movie`, {\n    params: {\n      query,\n    },\n  });\n  return data;\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport { Container, CardWrapper, MovieName, Image } from './MoviesList.styled';\nimport notFoundPoster from 'images/poster.jpg';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <Container>\n      {movies.map(({ id, original_title, poster_path }) => (\n        <CardWrapper key={id}>\n          <Link state={{ from: location }} to={`movies/${id}`}>\n            <Image\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w342/${poster_path}`\n                  : `${notFoundPoster}`\n              }\n              alt={original_title}\n            />\n            <MovieName>{original_title}</MovieName>\n          </Link>\n        </CardWrapper>\n      ))}\n    </Container>\n  );\n};\n","import { MoviesList } from 'components/MoviesList';\nimport { getTrendMovies } from 'moviesAPI';\nimport { useEffect, useState } from 'react';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    getTrendMovies().then(({ results }) => {\n      setMovies([...results]);\n    });\n  }, []);\n  return (\n    <main>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </main>\n  );\n};\n\nexport default Home;\n"],"names":["Container","styled","CardWrapper","props","theme","colors","white","Image","MovieName","axios","api_key","getTrendMovies","data","getMovieById","id","getMovieByName","query","params","MoviesList","movies","location","useLocation","map","original_title","poster_path","state","from","to","src","notFoundPoster","alt","useState","setMovies","useEffect","then","results"],"sourceRoot":""}